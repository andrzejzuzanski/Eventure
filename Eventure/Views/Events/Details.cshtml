@model Eventure.ViewModels.EventDetailsViewModel
@using System.Security.Claims

@{
    ViewData["Title"] = "Event Details";
}

<link rel="stylesheet" href="~/css/events/Details.css" />

<div class="details-container">
    <!-- Event Hero -->
    <div class="event-hero">
        <h1 class="event-title">@Model.Event.Title</h1>
        <div class="accent-line"></div>
    </div>

    <!-- Description -->
    @if (!string.IsNullOrEmpty(Model.Event.Description))
    {
        <div class="description-card">
            <h3 class="card-title">
                <i class="bi bi-file-text"></i>
                Event description
            </h3>
            <p class="description-text">@Model.Event.Description</p>
        </div>
    }

    <!-- Event Details Grid -->
    <div class="details-grid">
        <!-- Event Information -->
        <div class="details-card">
            <h3 class="card-title">
                <i class="bi bi-info-circle"></i>
                Event information
            </h3>
            <div class="detail-item">
                <span class="detail-label">Start date</span>
                <span class="detail-value">@Model.Event.StartDateTime.ToString("f")</span>
            </div>
            <div class="detail-item">
                <span class="detail-label">End date</span>
                <span class="detail-value">@Model.Event.EndDateTime.ToString("f")</span>
            </div>
            <div class="detail-item">
                <span class="detail-label">Location</span>
                <span class="detail-value">@Model.Event.Location</span>
            </div>
            <div class="detail-item">
                <span class="detail-label">Maximum number of participants</span>
                <span class="detail-value">@Model.Event.MaxParticipants</span>
            </div>
            <div class="detail-item">
                <span class="detail-label">Category</span>
                <span class="detail-value">@Model.Event.Category?.Name</span>
            </div>
        </div>

        <!-- Organizer Information -->
        <div class="details-card">
            <h3 class="card-title">
                <i class="bi bi-person-badge"></i>
                Organizer
            </h3>
            <div class="detail-item">
                <span class="detail-label">Username</span>
                <span class="detail-value">@Model.Event.Organizer?.UserName</span>
            </div>
            @if (User.Identity.IsAuthenticated && User.FindFirstValue(ClaimTypes.NameIdentifier) != Model.Event.OrganizerId)
            {
                <div class="detail-item">
                    <span class="detail-label">Contact</span>
                    <span class="detail-value">
                        <a asp-controller="Messages" asp-action="StartConversation" asp-route-recipientId="@Model.Event.OrganizerId" class="btn btn-outline-primary btn-sm">
                            <i class="bi bi-envelope me-1"></i>Write a message
                        </a>
                    </span>
                </div>
            }
        </div>
    </div>

    <!-- Map -->
    @if (Model.Event.Latitude.HasValue && Model.Event.Longitude.HasValue)
    {
        <div class="map-card">
            <h3 class="card-title">
                <i class="bi bi-geo-alt"></i>
                Location on the map
            </h3>
            <div class="map-container">
                <div id="details-map"></div>
            </div>
        </div>
    }

    <!-- Participants -->
    <div class="participants-card">
        <h3 class="card-title">
            <i class="bi bi-people"></i>
            Participants (@(Model.Event.Participants?.Count() ?? 0))
        </h3>
        @if (Model.Event.Participants != null && Model.Event.Participants.Any())
        {
            @foreach (var participant in Model.Event.Participants)
            {
                <div class="participant-item">
                    <div class="participant-avatar">
                        @participant.User?.UserName?.Substring(0, 1).ToUpper()
                    </div>
                    <span>@participant.User?.UserName</span>
                </div>
            }
        }
        else
        {
            <p class="text-muted"><em>No participants.</em></p>
        }
    </div>

    <!-- Actions -->
    @if (User.Identity?.IsAuthenticated == true)
    {
        var userId = User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        bool alreadyJoined = Model.Event.Participants?.Any(p => p.UserId == userId) ?? false;
        bool isOrganizer = Model.Event.OrganizerId == userId;
        bool isFull = Model.Event.MaxParticipants.HasValue && (Model.Event.Participants?.Count() ?? 0) >= Model.Event.MaxParticipants;

        <div class="actions-card">
            <h3 class="card-title">
                <i class="bi bi-gear"></i>
                Actions
            </h3>

            @if (!alreadyJoined && !isOrganizer && !isFull)
            {
                <form asp-action="Join" asp-route-id="@Model.Event.Id" method="post" style="display: inline;">
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-plus-circle me-2"></i>Join event
                    </button>
                </form>
            }
            else if (alreadyJoined)
            {
                <form asp-action="Leave" asp-route-id="@Model.Event.Id" method="post" style="display: inline;">
                    <button type="submit" class="btn btn-warning">
                        <i class="bi bi-dash-circle me-2"></i>Leave event
                    </button>
                </form>
            }
            else if (isFull)
            {
                <div class="alert alert-danger">
                    <i class="bi bi-exclamation-triangle me-2"></i>No seats available – event is full.
                </div>
            }

            @if (isOrganizer)
            {
                <a asp-action="Edit" asp-route-id="@Model.Event.Id" class="btn btn-primary">
                    <i class="bi bi-pencil me-2"></i>Edit
                </a>
                <a asp-action="Delete" asp-route-id="@Model.Event.Id" class="btn btn-danger">
                    <i class="bi bi-trash me-2"></i>Delete
                </a>
            }

            <a asp-action="Index" class="btn btn-secondary">
                <i class="bi bi-arrow-left me-2"></i>Back to list
            </a>
        </div>
    }

    <!-- Recommendations -->
    @if (Model.RecommendedEvents != null && Model.RecommendedEvents.Any())
    {
        <div class="recommendations-card">
            <h3 class="card-title">
                <i class="bi bi-lightbulb"></i>
                You may also be interested in...
            </h3>
            @foreach (var recEvent in Model.RecommendedEvents)
            {
                <a asp-action="Details" asp-route-id="@recEvent.Id" class="recommendation-item">
                    <div>
                        <h5 class="recommendation-title">@recEvent.Title</h5>
                        <small class="recommendation-date">@recEvent.StartDateTime.ToString("dd.MM.yyyy")</small>
                    </div>
                    <i class="bi bi-arrow-right"></i>
                </a>
            }
        </div>
    }

    <!-- Comments Section -->
    @if (Model.IsUserParticipant)
    {
        <div class="comments-section">
            <h3 class="card-title">
                <i class="bi bi-chat-dots"></i>
                Comments (@Model.RootComments.Sum(c => 1 + c.Replies.Count))
            </h3>

            <div id="main-comment-form">
                <partial name="_CommentFormPartial" view-data='new ViewDataDictionary(ViewData) { { "EventId", Model.Event.Id }, { "ParentCommentId", null } }' />
            </div>

            <div class="mt-4">
                @foreach (var comment in Model.RootComments)
                {
                    <partial name="_CommentPartial" model="comment" />
                }
            </div>
        </div>
    }
    else
    {
        <div class="comments-section">
            <div class="alert alert-info">
                <i class="bi bi-info-circle me-2"></i>You must be a participant in the event to view and add comments.
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function showReplyForm(parentCommentId) {
            document.querySelectorAll('[id^="reply-form-container-"]').forEach(container => {
                container.style.display = 'none';
                container.innerHTML = '';
            });

            const mainForm = document.getElementById('main-comment-form').querySelector('form');
            const replyForm = mainForm.cloneNode(true);
            replyForm.querySelector('input[name="ParentCommentId"]').value = parentCommentId;

            const container = document.getElementById('reply-form-container-' + parentCommentId);
            container.innerHTML = '';
            container.appendChild(replyForm);
            container.style.display = 'block';
        }
    </script>

    @if (Model.Event.Latitude.HasValue && Model.Event.Longitude.HasValue)
    {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const lat = @Model.Event.Latitude.Value.ToString(System.Globalization.CultureInfo.InvariantCulture);
                const lon = @Model.Event.Longitude.Value.ToString(System.Globalization.CultureInfo.InvariantCulture);

                const map = L.map('details-map').setView([lat, lon], 15);

                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '© <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                }).addTo(map);

                L.marker([lat, lon]).addTo(map)
                    .bindPopup('@Html.Raw(Model.Event.Title.Replace("'", "\\'"))')
                    .openPopup();
            });
        </script>
    }
}