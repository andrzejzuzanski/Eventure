@model Eventure.ViewModels.EventCreateViewModel

@{
    ViewData["Title"] = "Edit Event";
}

<link rel="stylesheet" href="~/css/events/Edit.css" />

<div class="edit-container">
    <div class="form-card">
        <div class="form-header">
            <h1 class="form-title">Edytuj Wydarzenie</h1>
            <div class="accent-line"></div>
            <p class="form-subtitle">Zaktualizuj szczegóły swojego wydarzenia</p>
        </div>

        <form asp-action="Edit" asp-route-id="@Context.Request.RouteValues["id"]" method="post" enctype="multipart/form-data">
            <div class="form-section">
                <label asp-for="Title" class="form-label">Tytuł wydarzenia</label>
                <input asp-for="Title" class="form-control" placeholder="Wprowadź nazwę wydarzenia..." />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-section">
                <label asp-for="Description" class="form-label">Opis</label>
                <textarea asp-for="Description" class="form-control" placeholder="Opisz szczegóły wydarzenia, program, co uczestników czeka..."></textarea>
            </div>

            <div class="form-section">
                <label asp-for="Location" class="form-label">Lokalizacja</label>
                <div class="input-group">
                    <input asp-for="Location" class="form-control" placeholder="Wpisz adres lub nazwę miejsca..." />
                    <button class="btn btn-outline-secondary" type="button" id="geocode-button">
                        <i class="bi bi-geo-alt"></i> Znajdź na mapie
                    </button>
                </div>
                <div class="map-info">Kliknij na mapie, aby wybrać dokładną lokalizację</div>
            </div>

            <div class="form-section">
                <div class="map-container">
                    <div id="form-map"></div>
                </div>
            </div>

            <input asp-for="Latitude" type="hidden" />
            <input asp-for="Longitude" type="hidden" />

            <div class="form-row">
                <div class="form-section">
                    <label asp-for="StartDateTime" class="form-label">Data i godzina rozpoczęcia</label>
                    <input asp-for="StartDateTime" type="datetime-local" class="form-control" />
                </div>
                <div class="form-section">
                    <label asp-for="EndDateTime" class="form-label">Data i godzina zakończenia</label>
                    <input asp-for="EndDateTime" type="datetime-local" class="form-control" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-section">
                    <label asp-for="MaxParticipants" class="form-label">Maksymalna liczba uczestników</label>
                    <input asp-for="MaxParticipants" class="form-control" placeholder="np. 50" />
                </div>
                <div class="form-section">
                    <label asp-for="CategoryId" class="form-label">Kategoria</label>
                    <select asp-for="CategoryId" class="form-control" asp-items="Model.Categories">
                        <option value="">Wybierz kategorię...</option>
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
            </div>

            <div class="form-section">
                <label asp-for="EventImage" class="form-label">Nowe zdjęcie wydarzenia</label>
                <input asp-for="EventImage" class="form-control" type="file" accept="image/*" data-val="false" />
                <small class="text-muted">Pozostaw puste, aby zachować obecne zdjęcie</small>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-success">
                    <i class="bi bi-check-circle me-2"></i>Zapisz Zmiany
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left me-2"></i>Anuluj
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const latInput = document.getElementById('Latitude');
            const lonInput = document.getElementById('Longitude');
            const locationInput = document.getElementById('Location');
            const geocodeButton = document.getElementById('geocode-button');

            let initialLat = latInput.value ? parseFloat(latInput.value) : 52.23;
            let initialLon = lonInput.value ? parseFloat(lonInput.value) : 21.01;
            let initialZoom = latInput.value ? 15 : 6;

            const map = L.map('form-map').setView([initialLat, initialLon], initialZoom);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

            let marker = L.marker([initialLat, initialLon]);

            if (latInput.value && lonInput.value) {
                marker.addTo(map);
            }

            function reverseGeocode(lat, lon) {
                const url = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}`;

                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        if (data && data.display_name) {
                            locationInput.value = data.display_name;
                        }
                    })
                    .catch(error => console.error('Błąd podczas odwrotnego geokodowania:', error));
            }

            function updateMarkerAndInputs(lat, lon, shouldReverseGeocode = false) {
                marker.setLatLng([lat, lon]);
                if (!map.hasLayer(marker)) {
                    marker.addTo(map);
                }
                map.setView([lat, lon], 15);

                latInput.value = lat.toString().replace(',', '.');
                lonInput.value = lon.toString().replace(',', '.');

                if (shouldReverseGeocode) {
                    reverseGeocode(lat, lon);
                }
            }

            map.on('click', function(e) {
                const lat = e.latlng.lat.toFixed(6);
                const lon = e.latlng.lng.toFixed(6);
                updateMarkerAndInputs(lat, lon, true);
            });

            geocodeButton.addEventListener('click', function () {
                const address = locationInput.value;
                if (!address) {
                    alert('Proszę wpisać adres w polu lokalizacji.');
                    return;
                }

                const url = `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(address)}&format=json&limit=1`;

                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        if (data && data.length > 0) {
                            const result = data[0];
                            updateMarkerAndInputs(result.lat, result.lon);
                        } else {
                            alert('Nie znaleziono lokalizacji. Spróbuj podać bardziej szczegółowy adres.');
                        }
                    })
                    .catch(error => {
                        console.error('Błąd podczas geokodowania:', error);
                        alert('Wystąpił błąd podczas wyszukiwania adresu.');
                    });
            });

            const inputs = document.querySelectorAll('.form-control, .form-select');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.style.transform = 'scale(1.005)';
                });

                input.addEventListener('blur', function() {
                    this.parentElement.style.transform = 'scale(1)';
                });
            });
        });
    </script>
}