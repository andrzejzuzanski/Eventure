@page
@model ResetPasswordModel
@{
    ViewData["Title"] = "Resetuj hasło";
}

<link rel="stylesheet" href="~/css/Account/auth-styles.css" />

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-header">
            <h1 class="auth-title">Nowe hasło</h1>
            <div class="accent-line"></div>
            <p class="auth-subtitle">Wprowadź swoje nowe, bezpieczne hasło</p>
        </div>

        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
            <input asp-for="Input.Code" type="hidden" />
            
            <div class="form-floating">
                <input asp-for="Input.Email" class="form-control" autocomplete="email" aria-required="true" placeholder="name@example.com" readonly />
                <label asp-for="Input.Email" class="form-label">Adres e-mail</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            
            <div class="form-floating">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Wprowadź nowe hasło" />
                <label asp-for="Input.Password" class="form-label">Nowe hasło</label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            
            <div class="form-floating">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Potwierdź nowe hasło" />
                <label asp-for="Input.ConfirmPassword" class="form-label">Potwierdź nowe hasło</label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            
            <button type="submit" class="w-100 btn btn-primary">
                <i class="bi bi-shield-check me-2"></i>Ustaw nowe hasło
            </button>

            <div class="auth-links">
                <p>
                    Pamiętasz hasło? 
                    <a asp-page="./Login">
                        <i class="bi bi-box-arrow-in-right me-1"></i>Zaloguj się
                    </a>
                </p>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Enhanced form interactions
            const inputs = document.querySelectorAll('.form-control:not([readonly])');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.style.transform = 'scale(1.02)';
                });
                
                input.addEventListener('blur', function() {
                    this.parentElement.style.transform = 'scale(1)';
                });
            });

            // Password strength and match validation
            const passwordInput = document.querySelector('input[name="Input.Password"]');
            const confirmPasswordInput = document.querySelector('input[name="Input.ConfirmPassword"]');

            function validatePassword() {
                const password = passwordInput.value;
                const hasMinLength = password.length >= 8;
                const hasUpper = /[A-Z]/.test(password);
                const hasLower = /[a-z]/.test(password);
                const hasNumber = /\d/.test(password);
                const hasSpecial = /[!@@#$%^&*(),.?":{}|<>]/.test(password);

                if (password && hasMinLength && hasUpper && hasLower && hasNumber) {
                    passwordInput.classList.remove('is-invalid');
                    passwordInput.classList.add('is-valid');
                } else if (password) {
                    passwordInput.classList.remove('is-valid');
                    passwordInput.classList.add('is-invalid');
                } else {
                    passwordInput.classList.remove('is-valid', 'is-invalid');
                }
            }

            function checkPasswordMatch() {
                if (confirmPasswordInput.value && passwordInput.value !== confirmPasswordInput.value) {
                    confirmPasswordInput.classList.add('is-invalid');
                    confirmPasswordInput.classList.remove('is-valid');
                } else if (confirmPasswordInput.value && passwordInput.value === confirmPasswordInput.value) {
                    confirmPasswordInput.classList.remove('is-invalid');
                    confirmPasswordInput.classList.add('is-valid');
                } else {
                    confirmPasswordInput.classList.remove('is-valid', 'is-invalid');
                }
            }

            passwordInput.addEventListener('input', function() {
                validatePassword();
                checkPasswordMatch();
            });

            confirmPasswordInput.addEventListener('input', checkPasswordMatch);

            // Loading state for submit button
            const form = document.querySelector('form');
            const submitBtn = document.querySelector('button[type="submit"]');
            
            form.addEventListener('submit', function() {
                submitBtn.classList.add('loading');
                submitBtn.disabled = true;
            });
        });
    </script>
}